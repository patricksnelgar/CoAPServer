package server;

import org.eclipse.californium.core.CoapResource;
import org.eclipse.californium.core.coap.CoAP;
import org.eclipse.californium.core.server.resources.CoapExchange;

import javax.xml.soap.Node;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.PrintWriter;

import java.sql.*;

/**
 * Created by Patrick on 8/18/2015.
 */
public class RegisterNode extends CoapResource {

    String db = "jdbc:hsqldb:hsql://localhost/wsn_db";
    Connection connection;
    int NodeID = -1;

    public RegisterNode(String name) {
        super(name);
    }

    @Override
    public void handlePOST(CoapExchange ex) {
        ex.accept();
        String request = ex.getRequestText();
        //writeToFile(request);
        registerNode(request);
        System.out.println(NodeID);
        int success = createNewTable(NodeID);
        if(success == -1) {
            ex.respond("-1");
        } else {
            ex.respond("0");
        }
    }

    private int createNewTable(int tableName){

        String sql = "CREATE TABLE "+'"'+tableName+'"'+" ("+
                        "ID int Generated By Default As Identity,\n" +
                        "\tN_ID int Not Null,\n" +
                        "\tN_GPS varchar(255),\n" +
                        "\tN_TIMESTAMP TIMESTAMP,\n" +
                        "\tTemp_1 varchar(255), \n" +
                        "\tTemp_2 varchar(255),\n" +
                        "\tRAINFALL varchar(255),\n" +
                        "\tWINDSPEED varchar(255),\n" +
                        "\tPrimary Key (ID)"+
                    ")";

        try {
            Class.forName("org.hsqldb.jdbc.JDBCDriver" );
            connection = DriverManager.getConnection(db, "PATRICK", "TEST");
            Statement st = connection.createStatement();
            ResultSet res = st.executeQuery(sql);

            res.close();
            st.close();
            connection.close();

        } catch (Exception e){
            e.printStackTrace();
            return -1;
        }

        return 0;
    }

    private void registerNode(String info){
        try {
            Class.forName("org.hsqldb.jdbc.JDBCDriver" );
            connection = DriverManager.getConnection(db, "PATRICK", "TEST");

            String[] values = info.split(",");
            NodeID = Integer.parseInt(values[0]);
            Statement st = null;
            ResultSet res = null;

            st = connection.createStatement();
            res = st.executeQuery("INSERT INTO NODE_LIST (N_ID, N_Address, N_Type, N_Last, N_Battery, N_Interval, N_Friendly_Name) VALUES(" + Integer.parseInt(values[0]) + ",'" + values[1] + "'," + Integer.parseInt(values[2]) + ", NOW()" + "," + Integer.parseInt(values[3]) + "," + Integer.parseInt(values[4]) + ",'" + values[5] + "')");

            res.close();
            st.close();
            connection.close();

        } catch (Exception e){
            e.printStackTrace();
        }
    }
}
